package actsone.external
{
	import flash.events.IEventDispatcher;

	public  interface IExternalFunction extends IEventDispatcher
	{
 
//		 function getCellGroupMergeInfo(columnKey:String,row:int):Array;
//		 function getSelectedIndexs():Array;
//		 function getCheckBoxValue(dataField:String):Array;
//		 function setItemAt(item:Object,rIndex:int):void;
//		 function getItemAt(rowIndex:int):Object;
//		 function getArrayData(isBackup:Boolean = false):Array;
//		 function setMultiRowsHide(strListHideIndex:String,bHide:Boolean,isHandleBkDp:Boolean=true):void;
//		 function undoRowHide():void;
//		 function getClientDataString(type:String="A",visibleType:String="A",dataType:String="text"):String;
//		 function insertColumn(columnKey:String, columnText:String, columnType:String, maxLength:String, columnwidth:String, editable:Boolean,parentDataField:String,insertAt:String):void;
//		 function generateTestData(numRows:int,numCols:int,isNormal:Boolean=true):void;
//		 function handlePressOutOfGridOne():void;
//		 function getTextData(hasColumnDataField:Boolean=false):String;
//		 function getCellActivation(strColumnKey:String, nRow:int):String;
//		 function setCellActivation(strColumnKey:String, nRow:int, strActivation:String):void;
//		 function getParamKey(index:int):String;
//		 function getParamCount():int;
//		 function getParams(key:String):String;
//		 function setParams(key:String, value:String):void;
		 
//		 function setStatus(strStatus: String):void;
//		 function getProtocolData(selectedField:Object=null):String;
//		 function setProtocolData(protocolData:String):void;
//		 function getDataObject(selectedField:Object=null):String;
//		 function exportExcelByActiveX():String;
//		 function importExcelByActiveX(str:String):void;
//		 function getColumnCount():int;
//		 function getColumns():Array;
//		 function getSelectedItem():Object;
//		 function getSelectedIndex():int;
//		 function setCellArray(valueArray:Array, rowIndexArray:Array, fieldName:String):void;
//		 function getCellIndexArray(value:Object, fieldName:String, returnFieldName:String):Array;
//		 function setCell(value:Object, rowIndex:int, fieldName:String):void;
//		 function scrollToRow(rowIndex:int):void;
//		 function getPagingCount():int;
//		 function getPageTotal():int;
//		 function getCurrentPage():int;
//		 function getUpdatedRows():Array;
//		 function getRow(rowIndex:int):Object;
//		 function getInsertedRows():Array;
//		 function getDeletedRows():Array;
//		 function getDataGridString():String;
//		 function getComboNameAtColumnIndex(colIndex:int, rowIndex:int):String;
//		 function getComboNameAtColumn(colname:String, rowIndex:int):String;
//		 function getColumnProperty(colField:Object, property:String):Object;
//		 function showColumnIndex(colIndex:int):void;
//		 function getCellBackgroundColor(col:int, row:int):String;
//		 function setCheckBoxVisible(strColKey:String, nRow:int, bVisible:Boolean):void;
//		 function setButtonVisible(strColKey:String, nRow:int, bVisible:Boolean):void;
//		 function getCellValues(listColumKey:String, nRow:int):Array;
//		 function getCell(rowIndex:int, fieldName:String,bname:Boolean=false):String;
//		 function deleteRows():void;
//		 function removeAllData():void;
//		 function getAllData():Object;
//		 function changeRowSeparator(sep:String):void;
//		 function addComboDataAtColumnIndex(colIndex:int, sComboData:String):void;
//		 function addComboDataAtColumn(colKey:String, sComboData:String):void;
//		 function getColumnType(columnKey:String):String;
//		 function getColumnIndex(dataField:String):int;
//		 function getCheckedRowsIndex(columnKey:String):Array;
//		 function getXMLData():String;
//		 function clearData():void;
//		 function getColMaxLength(columnKey:String):String;
//		 function excelImport(strPath:String, strColumnKeyList:String, strImportValidate:String, bIgnoreHeader:Boolean, bTrimBottom:Boolean, bCharset:Boolean = true, dateInputFormat:String=""):void;
//		 function excelExport(strPath:String, strListColumnKey:String, bHeaderVisible:Boolean, bDataFormat:Boolean, bHeaderOrdering:Boolean=true,bColHideVisible:Boolean=true,strExcelFileName:String="", bCharset:Boolean=true):void;
//		 function moveTreeNode(strParentTreeKey:String, strTreeKey:String):void;
//		 function insertTreeNode(strParentTreeKey: String, strTreeKey: String, strText: String):void;
//		 function getTreeSummaryValue(strTreeKey:String, strSummaryColumnKey:String, strFunc:String, bAll:Boolean):int;
//		 function getTreePrevNodeKey(strTreeKey:String, isInBranch:Boolean = false):String;
//		 function getTreeParentNodeKey(strTreeKey:String):String;
//		 function getTreeKeyFromRowIndex(rowIndex: int): String;
//		 function getTreeFirstNodeKey(): Object;
//		 function getTreeChildNodeKey(strTreeKey:String): String;
//		 function getTreeChildNodeCount(strTreeKey:String, bAll:Boolean): int;
//		 function getRowIndexFromTreeKey(strTreeKey:String):int;
//		 function deleteTreeNode(strTreeKey:String):void;
//		 function collapseTreeNode(strTreeKey:String):void;
//		 function expandTreeNode(strTreeKey:String, bAll:Boolean):void;
//		 function expandTreeAll():void;
//		 function getTreeMode():Boolean;
//		 function getImageListCount(columnKey:String):int;
//		 function getImageListURL(columnKey:String, imageIndex:int):String;
//		 function removeImageList(columnKey:String, imageIndex:int):void;
//		 function getActiveColKey():String;
//		 function getComboSelectedIndex(columnKey:String, rowIndex:int):int;
//		 function getComboSelectedListKey(columnKey:String, rowIndex:int):String;
//		 function getComboListKey(columnKey:String, listKey:int):String;
//		 function getCellImage(strColKey:String, nRow:int):String;
//		 function getCellHiddenValue(strColumnKey:String, nRow:int):String;
//		 function getCellHiddenValueIndex(nColumnIndex:int, nRow:int):String;
//		 function getCellValue(listColumKey:String, nRow:int):Object;
//		 function getCellValueIndex(nColumnIndex:int, nRow:int):String;
//		 function getActiveRowIndex():int;
//		 function getRowCount(isFilter:Boolean=false):Number;
//		 function moveRow(nRow:int):void;
// 		 function deleteRow(index:int=-1):void;
// 		 function addRowAt(row:Object, index:int):void;
//		 function insertRow(index:int):void;
//		 function addRow(row:Object=null):void;
//		 function getColHDIndex(columnKey:String):int;
//		 function getColHDText(strColumnKey:String):String;
//		 function getColHDVisibleKey(index:int):String;
//		 function getColHDVisibleIndex(strColumnKey:String):int;
//		 function getColHDKey(nColunmIndex:int):String;
//		 function getGroupHDText(strGroupKey:String):String;
//		 function getColCellActivation(strColumnKey:String):String;
//		 function getDataGridProperty(property:String):Object;
//		 function getGridData(columnKey:String=null):String;
	}
}