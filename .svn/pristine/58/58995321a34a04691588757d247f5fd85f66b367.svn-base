<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"		  
		   implements="mx.controls.listClasses.IDropInListItemRenderer" 
		   tabEnabled="false" initialize="init()" >
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			
			import kr.co.actsone.common.Global;
			import kr.co.actsone.controls.ExAdvancedDataGrid;
			import kr.co.actsone.controls.advancedDataGridClasses.ExAdvancedDataGridColumn;
			import kr.co.actsone.controls.advancedDataGridClasses.ExAdvancedDataGridListData;
			import kr.co.actsone.events.SAEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.listClasses.BaseListData;
			import mx.controls.listClasses.IDropInListItemRenderer;	
			[Bindable]
			public var textAreaValue:String="";
			
			private var _flag:Boolean=false;
			public var myComboString :String=""; // fix bug of close comboboxEditor
			public var text:String="";
			
			private function init():void
			{
				//				this.addEventListener(FocusEvent.FOCUS_OUT, focusOutItemHandler);
			}
			
			private function focusOutItemHandler(event:FocusEvent):void
			{
				if (!_flag)
				{
					this.txtImageText.setFocus();
					_flag=true;
				}
			}
			
			private var _listData:BaseListData;
			public var dataField:String;
			
			public function set listData(value:BaseListData):void
			{
				this._listData=ExAdvancedDataGridListData(value);
				
				dataField=ExAdvancedDataGrid(this.listData.owner).columns[this.listData.columnIndex].dataField;
			}
			
			public function get listData():BaseListData
			{
				return _listData;
			}
			
			override public function set data(value:Object):void
			{
				super.data=value;
				
				textAreaValue=value[dataField];
			 			
			}
			
			private function initTextInputHandler():void
			{
				this.txtImageText.setFocus();				
			}
			
			public function onMouseDownImageHandler(event:MouseEvent):void{
				var listOwner:ExAdvancedDataGrid = this.listData.owner as ExAdvancedDataGrid;
				var saEvent:SAEvent=new SAEvent(SAEvent.IMAGE_ICON_CLICK,true);
				saEvent.columnKey=dataField;
				saEvent.nRow=listOwner.getItemIndex(data);
				listOwner.dispatchEvent(saEvent);
				
			}
			
			private function changeHandler(event:Event):void
			{
				this.textAreaValue=this.txtImageText.text;
				
			}
			
			protected function txtImageText_keyUpHandler(event:KeyboardEvent):void
			{
				var listOwner:ExAdvancedDataGrid = this.listData.owner as ExAdvancedDataGrid;
				if(listOwner.eventArr.hasOwnProperty(SAEvent.TEXT_INPUT_KEY_UP))
				{
					//dispatch event textInputKeyUp event to javascript
					var saEvent:SAEvent = new SAEvent(SAEvent.TEXT_INPUT_KEY_UP,true);
					saEvent.strText = txtImageText.text;
					saEvent.keyCode = event.keyCode;
					saEvent.columnKey = this.dataField;
					saEvent.nRow = (this.listData.owner as ExAdvancedDataGrid)._selectedRowIndex; //Add property nRow for Feature #3894 (Keyup event)
					listOwner.dispatchEvent(saEvent);
				}
				 
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	 <s:TextArea id="txtImageText"   width="{this.width-5}" 
				 height="{this.height-5}" 
				 text="{textAreaValue}" 
				 creationComplete="initTextInputHandler()"
				 change="changeHandler(event)" 
				 keyUp="txtImageText_keyUpHandler(event)"
				 x="4" y="3"/>
   
</mx:Canvas>
